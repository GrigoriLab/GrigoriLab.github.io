{"version":3,"sources":["utils.js","LoginUseState.js","LoginUseReducer.js","LoginUseReducerImmer.js","LoginWithContext.js","App.js","serviceWorker.js","index.js"],"names":["login","_x","_login","apply","this","arguments","_callee","_ref","username","password","regenerator_default","a","wrap","_context","prev","next","abrupt","Promise","resolve","reject","setTimeout","stop","LoginUseState","_useState","useState","_useState2","Object","slicedToArray","setUsername","_useState3","_useState4","setPassword","_useState5","_useState6","isLoading","showLoader","_useState7","_useState8","error","setError","_useState9","_useState10","isLoggedIn","setIsLoggedIn","onSubmit","asyncToGenerator","mark","e","preventDefault","t0","react_default","createElement","className","Fragment","onClick","type","placeholder","value","onChange","currentTarget","autoComplete","disabled","loginReducer","state","action","objectSpread","defineProperty","fieldName","payload","initialState","LoginUseReducer","_useReducer","useReducer","_useReducer2","dispatch","curriedLoginReducer","produce","draft","todo","todos","find","item","title","completed","StateContext","React","createContext","DispatchContext","LoginUseContext","_useImmerReducer","useImmerReducer","_useImmerReducer2","Provider","TodoPage","_ref2","map","TodoItem","assign","key","_ref3","useContext","checked","useSimpleHashRouter","routes","currentRoute","window","location","hash","setHash","onHashChange","useEffect","addEventListener","removeEventListener","useLocationHash","substr","App","CurrentRoute","useReducerImmer","LoginUseReducerImmer","withContext","LoginWithContext","href","Boolean","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5c31e35b.chunk.js","sourcesContent":["export async function login({ username, password }) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (username === 'harry' && password === 'password') {\n        resolve();\n      } else {\n        reject();\n      }\n    }, 1000);\n  });\n}\n","import React, { useState } from 'react';\nimport { login } from './utils';\n\nexport default function LoginUseState() {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [isLoading, showLoader] = useState(false);\n  const [error, setError] = useState('');\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  const onSubmit = async e => {\n    e.preventDefault();\n\n    setError('');\n    showLoader(true);\n\n    try {\n      await login({ username, password });\n      setIsLoggedIn(true);\n    } catch (error) {\n      setError('Incorrect username or password!');\n      showLoader(false);\n      setUsername('');\n      setPassword('');\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"login-container\">\n        {isLoggedIn ? (\n          <>\n            <h1>Welcome {username}!</h1>\n            <button onClick={() => setIsLoggedIn(false)}>Log Out</button>\n          </>\n        ) : (\n          <form className=\"form\" onSubmit={onSubmit}>\n            {error && <p className=\"error\">{error}</p>}\n            <p>Please Login!</p>\n            <input\n              type=\"text\"\n              placeholder=\"username\"\n              value={username}\n              onChange={e => setUsername(e.currentTarget.value)}\n            />\n            <input\n              type=\"password\"\n              placeholder=\"password\"\n              autoComplete=\"new-password\"\n              value={password}\n              onChange={e => setPassword(e.currentTarget.value)}\n            />\n            <button className=\"submit\" type=\"submit\" disabled={isLoading}>\n              {isLoading ? 'Logging in...' : 'Log In'}\n            </button>\n          </form>\n        )}\n      </div>\n    </div>\n  );\n}\n","import React, { useReducer } from 'react';\nimport { login } from './utils';\n\nfunction loginReducer(state, action) {\n  switch (action.type) {\n    case 'field': {\n      return {\n        ...state,\n        [action.fieldName]: action.payload,\n      };\n    }\n    case 'login': {\n      return {\n        ...state,\n        error: '',\n        isLoading: true,\n      };\n    }\n    case 'success': {\n      return {\n        ...state,\n        isLoggedIn: true,\n        isLoading: false,\n      };\n    }\n    case 'error': {\n      return {\n        ...state,\n        error: 'Incorrect username or password!',\n        isLoggedIn: false,\n        isLoading: false,\n        username: '',\n        password: '',\n      };\n    }\n    case 'logOut': {\n      return {\n        ...state,\n        isLoggedIn: false,\n      };\n    }\n    default:\n      return state;\n  }\n}\n\nconst initialState = {\n  username: '',\n  password: '',\n  isLoading: false,\n  error: '',\n  isLoggedIn: false,\n};\n\nexport default function LoginUseReducer() {\n  const [state, dispatch] = useReducer(loginReducer, initialState);\n  const { username, password, isLoading, error, isLoggedIn } = state;\n\n  const onSubmit = async e => {\n    e.preventDefault();\n\n    dispatch({ type: 'login' });\n\n    try {\n      await login({ username, password });\n      dispatch({ type: 'success' });\n    } catch (error) {\n      dispatch({ type: 'error' });\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"login-container\">\n        {isLoggedIn ? (\n          <>\n            <h1>Welcome {username}!</h1>\n            <button onClick={() => dispatch({ type: 'logOut' })}>\n              Log Out\n            </button>\n          </>\n        ) : (\n          <form className=\"form\" onSubmit={onSubmit}>\n            {error && <p className=\"error\">{error}</p>}\n            <p>Please Login!</p>\n            <input\n              type=\"text\"\n              placeholder=\"username\"\n              value={username}\n              onChange={e =>\n                dispatch({\n                  type: 'field',\n                  fieldName: 'username',\n                  payload: e.currentTarget.value,\n                })\n              }\n            />\n            <input\n              type=\"password\"\n              placeholder=\"password\"\n              autoComplete=\"new-password\"\n              value={password}\n              onChange={e =>\n                dispatch({\n                  type: 'field',\n                  fieldName: 'password',\n                  payload: e.currentTarget.value,\n                })\n              }\n            />\n            <button className=\"submit\" type=\"submit\" disabled={isLoading}>\n              {isLoading ? 'Logging in...' : 'Log In'}\n            </button>\n          </form>\n        )}\n      </div>\n    </div>\n  );\n}\n","import React, { useReducer } from 'react';\nimport produce from 'immer';\n// import { useImmerReducer } from 'use-immer';\nimport { login } from './utils';\n\nfunction loginReducer(draft, action) {\n  switch (action.type) {\n    case 'field': {\n      draft[action.fieldName] = action.payload;\n      return;\n    }\n    case 'login': {\n      draft.error = '';\n      draft.isLoading = true;\n      return;\n    }\n    case 'success': {\n      draft.isLoggedIn = true;\n      draft.isLoading = false;\n      draft.username = '';\n      draft.password = '';\n      return;\n    }\n    case 'error': {\n      draft.error = 'Incorrect username or password!';\n      draft.isLoggedIn = false;\n      draft.isLoading = false;\n      draft.username = '';\n      draft.password = '';\n      return;\n    }\n    case 'logOut': {\n      draft.isLoggedIn = false;\n      return;\n    }\n    default:\n      return;\n  }\n}\n\nconst initialState = {\n  username: '',\n  password: '',\n  isLoading: false,\n  error: '',\n  isLoggedIn: false,\n};\n\nconst curriedLoginReducer = produce(loginReducer);\n\n// const curriedLoginReducerFake = (state, ...args) => {\n//   return produce(state, (draft) => {\n//     loginReducer(state, ...args);\n//   })\n// }\n\nexport default function LoginUseState() {\n  const [state, dispatch] = useReducer(curriedLoginReducer, initialState);\n  // const [state, dispatch] = useImmerReducer(loginReducer, initialState);\n  const { username, password, isLoading, error, isLoggedIn } = state;\n\n  const onSubmit = async e => {\n    e.preventDefault();\n\n    dispatch({ type: 'login' });\n\n    try {\n      await login({ username, password });\n      dispatch({ type: 'success' });\n    } catch (error) {\n      dispatch({ type: 'error' });\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"login-container\">\n        {isLoggedIn ? (\n          <>\n            <h1>Welcome {username}!</h1>\n            <button onClick={() => dispatch({ type: 'logOut' })}>\n              Log Out\n            </button>\n          </>\n        ) : (\n          <form className=\"form\" onSubmit={onSubmit}>\n            {error && <p className=\"error\">{error}</p>}\n            <p>Please Login!</p>\n            <input\n              type=\"text\"\n              placeholder=\"username\"\n              value={username}\n              onChange={e =>\n                dispatch({\n                  type: 'field',\n                  fieldName: 'username',\n                  payload: e.currentTarget.value,\n                })\n              }\n            />\n            <input\n              type=\"password\"\n              placeholder=\"password\"\n              autoComplete=\"new-password\"\n              value={password}\n              onChange={e =>\n                dispatch({\n                  type: 'field',\n                  fieldName: 'password',\n                  payload: e.currentTarget.value,\n                })\n              }\n            />\n            <button className=\"submit\" type=\"submit\" disabled={isLoading}>\n              {isLoading ? 'Logging in...' : 'Log In'}\n            </button>\n          </form>\n        )}\n      </div>\n    </div>\n  );\n}\n","import React, { useContext, useMemo } from 'react';\nimport { useImmerReducer } from 'use-immer';\nimport { login } from './utils';\n\nfunction loginReducer(draft, action) {\n  switch (action.type) {\n    case 'field': {\n      draft[action.fieldName] = action.payload;\n      return;\n    }\n    case 'login': {\n      draft.error = '';\n      draft.isLoading = true;\n      return;\n    }\n    case 'success': {\n      draft.isLoggedIn = true;\n      draft.isLoading = false;\n      draft.username = '';\n      draft.password = '';\n      return;\n    }\n    case 'error': {\n      draft.error = 'Incorrect username or password!';\n      draft.isLoggedIn = false;\n      draft.isLoading = false;\n      draft.username = '';\n      draft.password = '';\n      return;\n    }\n    case 'logOut': {\n      draft.isLoggedIn = false;\n      return;\n    }\n    case 'toggleTodoCompleted': {\n      const todo = draft.todos.find(item => item.title === action.payload);\n      todo.completed = !todo.completed;\n      return;\n    }\n    default:\n      return;\n  }\n}\n\nconst todos = [\n  {\n    title: 'Get milk',\n    completed: true,\n  },\n  {\n    title: 'Make YouTube video',\n    completed: false,\n  },\n  {\n    title: 'Write blog post',\n    completed: false,\n  },\n];\n\nconst initialState = {\n  username: '',\n  password: '',\n  isLoading: false,\n  error: '',\n  isLoggedIn: false,\n  todos,\n};\n\nconst StateContext = React.createContext();\nconst DispatchContext = React.createContext();\n\nexport default function LoginUseContext() {\n  const [state, dispatch] = useImmerReducer(loginReducer, initialState);\n  const { username, password, isLoading, error, isLoggedIn, todos } = state;\n\n  const onSubmit = async e => {\n    e.preventDefault();\n\n    dispatch({ type: 'login' });\n\n    try {\n      await login({ username, password });\n      dispatch({ type: 'success' });\n    } catch (error) {\n      dispatch({ type: 'error' });\n    }\n  };\n\n  return (\n    <DispatchContext.Provider value={dispatch}>\n      <StateContext.Provider value={state}>\n        <div className=\"App useContext\">\n          <div className=\"login-container\">\n            {isLoggedIn ? (\n              <>\n                <h1>Welcome {username}!</h1>\n                <button onClick={() => dispatch({ type: 'logOut' })}>\n                  Log Out\n                </button>\n              </>\n            ) : (\n              <form className=\"form\" onSubmit={onSubmit}>\n                {error && <p className=\"error\">{error}</p>}\n                <p>Please Login!</p>\n                <input\n                  type=\"text\"\n                  placeholder=\"username\"\n                  value={username}\n                  onChange={e =>\n                    dispatch({\n                      type: 'field',\n                      fieldName: 'username',\n                      payload: e.currentTarget.value,\n                    })\n                  }\n                />\n                <input\n                  type=\"password\"\n                  placeholder=\"password\"\n                  autoComplete=\"new-password\"\n                  value={password}\n                  onChange={e =>\n                    dispatch({\n                      type: 'field',\n                      fieldName: 'password',\n                      payload: e.currentTarget.value,\n                    })\n                  }\n                />\n                <button className=\"submit\" type=\"submit\" disabled={isLoading}>\n                  {isLoading ? 'Logging in...' : 'Log In'}\n                </button>\n              </form>\n            )}\n          </div>\n\n          <TodoPage todos={todos} />\n        </div>\n      </StateContext.Provider>\n    </DispatchContext.Provider>\n  );\n}\n\nfunction TodoPage({ todos }) {\n  return (\n    <div className=\"todoContainer\">\n      <h2>Todos</h2>\n      {todos.map(item => (\n        <TodoItem key={item.title} {...item} />\n      ))}\n    </div>\n  );\n}\n\nfunction TodoItem({ title, completed }) {\n  const dispatch = useContext(DispatchContext);\n  const state = useContext(StateContext);\n  // const { isLoggedIn } = state;\n  const isLoggedIn = true;\n  return (\n    <div className=\"todoItem\">\n      <p>{title}</p>\n      <div>\n        <input\n          type=\"checkbox\"\n          checked={completed}\n          onClick={() => {\n            if (!isLoggedIn) {\n              alert('Please login to click this!');\n            }\n          }}\n          onChange={() => {\n            if (isLoggedIn) {\n              dispatch({ type: 'toggleTodoCompleted', payload: title });\n            }\n          }}\n        />\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport LoginUseState from './LoginUseState';\nimport LoginUseReducer from './LoginUseReducer';\nimport LoginUseReducerImmer from './LoginUseReducerImmer';\nimport LoginWithContext from './LoginWithContext';\n\nfunction useLocationHash() {\n  const [hash, setHash] = useState(window.location.hash);\n  function onHashChange() {\n    setHash(window.location.hash);\n  }\n  useEffect(() => {\n    window.addEventListener('hashchange', onHashChange);\n    return () => window.removeEventListener('hashchange', onHashChange);\n  }, []);\n  return hash;\n}\n\nfunction useSimpleHashRouter(routes) {\n  const hash = useLocationHash();\n  // Exclude '#' when calculating hash.\n  const currentRoute = routes[hash.substr(1)];\n  if (currentRoute) {\n    return currentRoute;\n  }\n  return null;\n}\n\nfunction App() {\n  const CurrentRoute = useSimpleHashRouter({\n    useState: LoginUseState,\n    useReducer: LoginUseReducer,\n    useReducerImmer: LoginUseReducerImmer,\n    withContext: LoginWithContext,\n  });\n  return (\n    <>\n      {!CurrentRoute && (\n        <div className=\"App App-Column\">\n          <a href=\"#useState\">useState</a>\n          <br />\n          <br />\n          <a href=\"#useReducer\">useReducer</a>\n          <br />\n          <br />\n          <a href=\"#useReducerImmer\">useReducerImmer</a>\n          <br />\n          <br />\n          <a href=\"#withContext\">LoginWithContext</a>\n        </div>\n      )}\n      {CurrentRoute && <CurrentRoute />}\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}